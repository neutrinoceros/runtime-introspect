name: CI
on:
  push:
    branches:
    - main
  pull_request:
    paths-ignore:
    - README.md
    - CHANGELOG.md
  workflow_dispatch:

jobs:
  unit-tests:
    name: Test ${{ matrix.python-version }} ${{ matrix.prelude }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        python-version:
        - '3.10'
        - '3.11'
        - '3.12'
        - '3.13'
        - 3.13t
        - '3.14'
        - 3.14t
        - pypy3.10
        - pypy3.11
        # *conditionally* setting an env var is not supported in GitHub action.
        # Let's improvise
        prelude: ['']
        include:
        - os: ubuntu-latest
          python-version: '3.14'
          prelude: PYTHON_GIL=1 PYTHON_JIT=0
        - os: ubuntu-latest
          python-version: '3.14'
          prelude: PYTHON_GIL=1 PYTHON_JIT=1
        - os: ubuntu-latest
          python-version: 3.14t
          prelude: PYTHON_GIL=1 PYTHON_JIT=0
        - os: ubuntu-latest
          # this setup isn't actually supported yet, but because free-threaded builds
          # don't support JIT-enabling at all, PYTHON_JIT=1 is silently ignored
          # by the interpreter
          python-version: 3.14t
          prelude: PYTHON_GIL=0 PYTHON_JIT=1
        - os: ubuntu-latest
          python-version: 3.14t
          prelude: PYTHON_GIL=1 PYTHON_JIT=1
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6.8.0
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
        prune-cache: false

    - if: ${{ matrix.python-version == '3.10' }}
      run: echo "UV_RESOLUTION=lowest-direct" >> $GITHUB_ENV

    - name: Run tests (with coverage)
      if: ${{ startswith( matrix.os, 'ubuntu' ) }}
      run: |
        ${{ matrix.prelude }} uv run --group covcheck \
        coverage run --parallel-mode -m pytest --color=yes

    - name: Upload coverage data
      # only using reports from ubuntu because
      # combining reports from multiple platforms is tricky (or impossible ?)
      if: ${{ startswith( matrix.os, 'ubuntu' ) }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: runtime-introspect_coverage_data-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.prelude }}
        path: .coverage.*
        if-no-files-found: ignore
        include-hidden-files: true

  coverage:
    name: Combine & check coverage
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6.8.0
      with:
        python-version: '3.13'
        activate-environment: true
        enable-cache: true
        prune-cache: false
        cache-suffix: covcheck
    - run: uv sync --group covcheck

    - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        pattern: runtime-introspect_coverage_data-*
        merge-multiple: true

    - name: Check coverage
      run: |
        coverage combine
        coverage html --skip-covered --skip-empty
        coverage report --skip-covered --format=markdown >> "$GITHUB_STEP_SUMMARY"
        coverage report --fail-under=100

    - name: Upload HTML report if check failed.
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: runtime-introspect_coverage_report
        path: htmlcov
      if: ${{ failure() }}

  type-check:
    strategy:
      matrix:
        python-version:
        - '3.10'
        - '3.13'
        typechecker:
        - mypy
        - pyright
        - basedpyright

    runs-on: ubuntu-latest
    name: type check

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6.8.0
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: true
        enable-cache: true
        prune-cache: false
        cache-suffix: typecheck

    - run: uv sync --frozen --group typecheck
    - name: Typecheck source code
      run: ${{ matrix.typechecker }} src
    - name: Verify Types (pyright only)
      if: ${{ startsWith( matrix.typechecker , 'pyright' ) }}
      run: ${{ matrix.typechecker }} --verifytypes runtime_introspect
